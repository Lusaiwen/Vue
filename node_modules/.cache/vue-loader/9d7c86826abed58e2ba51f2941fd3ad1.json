{"remainingRequest":"C:\\Users\\MI\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MI\\Desktop\\vue练习\\Tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\MI\\Desktop\\vue练习\\Tree.vue","mtime":1594042428749},{"path":"C:\\Users\\MI\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\MI\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\MI\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogJ2Jhc2UtdHJlZScsDQogICAgcHJvcHM6IHsNCiAgICAgICAgZGF0YTogew0KICAgICAgICAgICAgdHlwZTogQXJyYXksDQogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICBkZWZhdWx0czogew0KICAgICAgICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgICAgICAgZGVmYXVsdDogKCkgPT4gKHsNCiAgICAgICAgICAgICAgICBsYWJlbDogJ2xhYmVsJywNCiAgICAgICAgICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJw0KICAgICAgICAgICAgfSkNCiAgICAgICAgfQ0KICAgIH0sDQogICAgZGF0YSgpew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgc2hvd0NoaWxkcmVuOiBbXQ0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIHNob3coaW5kZXgpew0KICAgICAgICAgICAgY29uc3QgZmxhZyA9IHRoaXMuc2hvd0NoaWxkcmVuW2luZGV4XTsNCiAgICAgICAgICAgIHRoaXMuJHNldCh0aGlzLnNob3dDaGlsZHJlbiwgaW5kZXgsICFmbGFnKQ0KICAgICAgICB9DQogICAgfQ0KfQ0K"},{"version":3,"sources":["Tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tree.vue","sourceRoot":".","sourcesContent":["<template>\r\n    <ul class=\"tree\">\r\n        <li \r\n            class=\"tree-node\"\r\n            v-for=\"(node,index) in data\"\r\n            :key=\"node[defaults.label]\"\r\n        >\r\n            <i \r\n                class=\"iconfont\"\r\n                :class=\"{\r\n                    'iconfont-below': !showChildren[index],\r\n                    'iconfont-right': showChildren[index]\r\n                }\"\r\n                v-if=\"node[defaults.children]\"\r\n            ></i>\r\n            <span class=\"tree-label\"\r\n             @click=\"show(index)\"\r\n            >{{ node[defaults.label] }}</span>\r\n            <keep-alive>\r\n                <base-tree \r\n                    :data=\"node[defaults.children]\"\r\n                    v-if=\"showChildren[index] && node[defaults.children]\"\r\n                ></base-tree>\r\n            </keep-alive>\r\n        </li>\r\n    </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'base-tree',\r\n    props: {\r\n        data: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        defaults: {\r\n            type: Object,\r\n            default: () => ({\r\n                label: 'label',\r\n                children: 'children'\r\n            })\r\n        }\r\n    },\r\n    data(){\r\n        return {\r\n            showChildren: []\r\n        }\r\n    },\r\n    methods: {\r\n        show(index){\r\n            const flag = this.showChildren[index];\r\n            this.$set(this.showChildren, index, !flag)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n@import './assest/font.css';\r\nli {\r\n    list-style: none;\r\n}\r\n.tree {\r\n    cursor: pointer;\r\n    user-select: none;\r\n}\r\n.tree-node {\r\n    margin: 10px 0 0 10px;\r\n}\r\n</style>"]}]}